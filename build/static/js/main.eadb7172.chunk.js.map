{"version":3,"sources":["components/ContactForm/ContactForm.stylad.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.stylad.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Box.js","components/App.js","components/helpers.js","index.js"],"names":["FormLable","styled","label","FormButton","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","addContact","preventDefault","props","onSubmit","reset","this","onChange","type","pattern","title","required","Component","List","ul","Item","li","ItemText","p","Button","ContactItem","id","onDeleteContact","onClick","ContactList","contacts","map","FilterLabel","FilteInput","input","Filter","placeholder","Box","color","space","layout","flexbox","grid","background","border","position","App","filter","contact","uuidv4","normolizedName","toLowerCase","find","alert","changeFilter","getVisibleContacts","normolizedFiter","includes","deleteContact","contactId","prevState","parsedContacts","key","items","localStorage","getItem","JSON","parse","error","Error","getFromLS","prevProps","setItem","stringify","saveToLS","visibleContacts","display","alignItems","flexDirection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eadb7172.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormLable = styled.label`\n\tfont-size: 20px;\n\tmargin: 10px;\n\tpadding: 5px;\n\ttext-decoration: solid;\n\tcolor: rgb(107, 41, 41);\n`;\n\nexport const FormButton = styled.button`\n\tmargin-left: 20px;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import React, { Component } from 'react';\nimport { FormLable } from './ContactForm.stylad';\nimport { FormButton } from './ContactForm.stylad';\n\nclass ContactForm extends Component {\n\tstate = {\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\n\thandleChange = e => {\n\t\tconst { name, value } = e.currentTarget;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\taddContact = e => {\n\t\te.preventDefault();\n\t\tthis.props.onSubmit(this.state);\n\t\tthis.reset();\n\t};\n\n\treset = () => {\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\tnumber: '',\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.addContact}>\n\t\t\t\t<FormLable>\n\t\t\t\t\tName:\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormLable>\n\n\t\t\t\t<FormLable>\n\t\t\t\t\tTel:\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={this.state.number}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormLable>\n\t\t\t\t<FormButton type=\"submit\">Add contact</FormButton>\n\t\t\t</form>\n\t\t);\n\t}\n}\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\ttext-decoration: none;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n\tmargin: 10px;\n\ttext-decoration: underline;\n`;\n\nexport const ItemText = styled.p`\n\tcolor: rgb(67, 69, 219);\n`;\n\nexport const Button = styled.button`\n\ttext-align: center;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './ContactItem.stylad';\nimport { ItemText } from './ContactItem.stylad';\nimport { Button } from './ContactItem.stylad';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n\t<Item>\n\t\t<ItemText>{name}</ItemText>\n\t\t<ItemText>{number}</ItemText>\n\t\t<Button onClick={() => onDeleteContact(id)}>Delete</Button>\n\t</Item>\n);\n\nContactItem.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tnumber: PropTypes.string.isRequired,\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { List } from './ContactList.styled';\nimport ContactItem from '../ContactItem/ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n\t<List>\n\t\t{contacts.map(({ id, name, number }) => (\n\t\t\t<ContactItem\n\t\t\t\tkey={id}\n\t\t\t\tid={id}\n\t\t\t\tname={name}\n\t\t\t\tnumber={number}\n\t\t\t\tonDeleteContact={onDeleteContact}\n\t\t\t/>\n\t\t))}\n\t</List>\n);\n\nContactList.propTypes = {\n\tcontacts: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tnumber: PropTypes.string.isRequired,\n\t\t}),\n\t),\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n\tcolor: rgb(233, 80, 80);\n\ttext-align: center;\n`;\n\nexport const FilteInput = styled.input`\n\ttext-align: center;\n\tmargin-right: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterLabel } from './Filter.styled';\nimport { FilteInput } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n\t<FilterLabel>\n\t\tFind contacts by name\n\t\t<FilteInput\n\t\t\ttype=\"text\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tplaceholder=\"Name contact\"\n\t\t/>\n\t</FilterLabel>\n);\n\nFilter.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport {\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n);\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { saveToLS, getFromLS } from 'components/helpers';\nimport { Box } from './Box';\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [],\n\t\tfilter: '',\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\tcomponentDidMount() {\n\t\tconst parsedContacts = getFromLS('contacts');\n\t\tif (parsedContacts) {\n\t\t\tthis.setState({ contacts: parsedContacts });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst { contacts } = this.state;\n\n\t\tif (contacts !== prevState.contacts) {\n\t\t\tsaveToLS('contacts', contacts);\n\t\t}\n\t}\n\n\taddContact = ({ name, number }) => {\n\t\tconst contact = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tnumber,\n\t\t};\n\n\t\tconst normolizedName = name.toLowerCase();\n\t\tif (\n\t\t\tthis.state.contacts.find(\n\t\t\t\tcontact => contact.name.toLowerCase() === normolizedName,\n\t\t\t)\n\t\t) {\n\t\t\treturn alert(`${name} is already in contacts`);\n\t\t}\n\n\t\tthis.setState(({ contacts }) => ({\n\t\t\tcontacts: [contact, ...contacts],\n\t\t}));\n\t};\n\n\tchangeFilter = e => {\n\t\tthis.setState({ filter: e.currentTarget.value });\n\t\t// console.log(this.state);\n\t};\n\n\tgetVisibleContacts = () => {\n\t\tconst { contacts, filter } = this.state;\n\t\tconst normolizedFiter = filter.toLowerCase();\n\t\treturn contacts.filter(contact =>\n\t\t\tcontact.name.toLowerCase().includes(normolizedFiter),\n\t\t);\n\t};\n\n\tdeleteContact = contactId => {\n\t\tthis.setState(prevState => ({\n\t\t\tcontacts: prevState.contacts.filter(contact => contact.id !== contactId),\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst visibleContacts = this.getVisibleContacts();\n\t\treturn (\n\t\t\t<Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n\t\t\t\t<Box>\n\t\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t\t<ContactForm onSubmit={this.addContact} />\n\t\t\t\t\t<h2>Contacts </h2>\n\t\t\t\t\t<Filter value={this.filter} onChange={this.changeFilter} />\n\t\t\t\t\t<ContactList\n\t\t\t\t\t\tcontacts={visibleContacts}\n\t\t\t\t\t\tonDeleteContact={this.deleteContact}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\nexport default App;\n","export const saveToLS = (key, value) => {\n\ttry {\n\t\tlocalStorage.setItem(key, JSON.stringify(value));\n\t} catch (error) {\n\t\tthrow new Error();\n\t}\n};\n\nexport const getFromLS = key => {\n\ttry {\n\t\tconst items = localStorage.getItem(key);\n\t\treturn items ? JSON.parse(items) : null;\n\t} catch (error) {\n\t\tthrow new Error();\n\t}\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}